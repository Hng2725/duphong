{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project_js\\\\THweb\\\\DKOnline\\\\BaiTapCuoiKi\\\\Frontend\\\\src\\\\contexts\\\\UniversityContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UniversityContext = /*#__PURE__*/createContext(undefined);\nexport const UniversityProvider = ({\n  children\n}) => {\n  _s();\n  // Khởi tạo state với dữ liệu từ localStorage hoặc dữ liệu mặc định\n  const [universities, setUniversities] = useState(() => {\n    const savedUniversities = localStorage.getItem(\"universities\");\n    if (savedUniversities) {\n      return JSON.parse(savedUniversities);\n    }\n    // Dữ liệu mặc định nếu không có trong localStorage\n    return [{\n      id: 1,\n      name: \"Đại học Bách Khoa Hà Nội\",\n      code: \"BKA\",\n      majors: [\"Công nghệ thông tin\", \"Điện tử\", \"Cơ khí\", \"Hóa học\"]\n    }, {\n      id: 2,\n      name: \"Đại học Công nghệ - ĐHQGHN\",\n      code: \"QHI\",\n      majors: [\"Công nghệ thông tin\", \"Khoa học máy tính\", \"An toàn thông tin\"]\n    }, {\n      id: 3,\n      name: \"Đại học Kinh tế Quốc dân\",\n      code: \"KTQ\",\n      majors: [\"Quản trị kinh doanh\", \"Kế toán\", \"Marketing\", \"Kinh tế quốc tế\"]\n    }];\n  });\n  const [examCombinations, setExamCombinations] = useState(() => {\n    const savedCombinations = localStorage.getItem(\"examCombinations\");\n    if (savedCombinations) {\n      return JSON.parse(savedCombinations);\n    }\n    // Dữ liệu mặc định nếu không có trong localStorage\n    return [{\n      id: 1,\n      code: \"A00\",\n      subjects: [\"Toán\", \"Lý\", \"Hóa\"],\n      description: \"Khối A\"\n    }, {\n      id: 2,\n      code: \"A01\",\n      subjects: [\"Toán\", \"Lý\", \"Anh\"],\n      description: \"Khối A1\"\n    }, {\n      id: 3,\n      code: \"D01\",\n      subjects: [\"Toán\", \"Văn\", \"Anh\"],\n      description: \"Khối D1\"\n    }];\n  });\n\n  // Lưu vào localStorage khi có thay đổi\n  React.useEffect(() => {\n    localStorage.setItem(\"universities\", JSON.stringify(universities));\n  }, [universities]);\n  React.useEffect(() => {\n    localStorage.setItem(\"examCombinations\", JSON.stringify(examCombinations));\n  }, [examCombinations]);\n  return /*#__PURE__*/_jsxDEV(UniversityContext.Provider, {\n    value: {\n      universities,\n      setUniversities,\n      examCombinations,\n      setExamCombinations\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(UniversityProvider, \"b7AWOSRJOzxkQVtiSLNz8eV/c+s=\");\n_c = UniversityProvider;\nexport const useUniversity = () => {\n  _s2();\n  const context = useContext(UniversityContext);\n  if (context === undefined) {\n    throw new Error(\"useUniversity must be used within a UniversityProvider\");\n  }\n  return context;\n};\n_s2(useUniversity, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UniversityProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","UniversityContext","undefined","UniversityProvider","children","_s","universities","setUniversities","savedUniversities","localStorage","getItem","JSON","parse","id","name","code","majors","examCombinations","setExamCombinations","savedCombinations","subjects","description","useEffect","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUniversity","_s2","context","Error","$RefreshReg$"],"sources":["C:/Project_js/THweb/DKOnline/BaiTapCuoiKi/Frontend/src/contexts/UniversityContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode } from \"react\";\r\n\r\nexport interface University {\r\n  id: number;\r\n  name: string;\r\n  code: string;\r\n  majors: string[];\r\n}\r\n\r\nexport interface ExamCombination {\r\n  id: number;\r\n  code: string;\r\n  subjects: string[];\r\n  description: string;\r\n}\r\n\r\ninterface UniversityContextType {\r\n  universities: University[];\r\n  setUniversities: (universities: University[]) => void;\r\n  examCombinations: ExamCombination[];\r\n  setExamCombinations: (combinations: ExamCombination[]) => void;\r\n}\r\n\r\nconst UniversityContext = createContext<UniversityContextType | undefined>(\r\n  undefined\r\n);\r\n\r\nexport const UniversityProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  // Khởi tạo state với dữ liệu từ localStorage hoặc dữ liệu mặc định\r\n  const [universities, setUniversities] = useState<University[]>(() => {\r\n    const savedUniversities = localStorage.getItem(\"universities\");\r\n    if (savedUniversities) {\r\n      return JSON.parse(savedUniversities);\r\n    }\r\n    // Dữ liệu mặc định nếu không có trong localStorage\r\n    return [\r\n      {\r\n        id: 1,\r\n        name: \"Đại học Bách Khoa Hà Nội\",\r\n        code: \"BKA\",\r\n        majors: [\"Công nghệ thông tin\", \"Điện tử\", \"Cơ khí\", \"Hóa học\"],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Đại học Công nghệ - ĐHQGHN\",\r\n        code: \"QHI\",\r\n        majors: [\"Công nghệ thông tin\", \"Khoa học máy tính\", \"An toàn thông tin\"],\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Đại học Kinh tế Quốc dân\",\r\n        code: \"KTQ\",\r\n        majors: [\r\n          \"Quản trị kinh doanh\",\r\n          \"Kế toán\",\r\n          \"Marketing\",\r\n          \"Kinh tế quốc tế\",\r\n        ],\r\n      },\r\n    ];\r\n  });\r\n\r\n  const [examCombinations, setExamCombinations] = useState<ExamCombination[]>(() => {\r\n    const savedCombinations = localStorage.getItem(\"examCombinations\");\r\n    if (savedCombinations) {\r\n      return JSON.parse(savedCombinations);\r\n    }\r\n    // Dữ liệu mặc định nếu không có trong localStorage\r\n    return [\r\n      {\r\n        id: 1,\r\n        code: \"A00\",\r\n        subjects: [\"Toán\", \"Lý\", \"Hóa\"],\r\n        description: \"Khối A\",\r\n      },\r\n      {\r\n        id: 2,\r\n        code: \"A01\",\r\n        subjects: [\"Toán\", \"Lý\", \"Anh\"],\r\n        description: \"Khối A1\",\r\n      },\r\n      {\r\n        id: 3,\r\n        code: \"D01\",\r\n        subjects: [\"Toán\", \"Văn\", \"Anh\"],\r\n        description: \"Khối D1\",\r\n      },\r\n    ];\r\n  });\r\n\r\n  // Lưu vào localStorage khi có thay đổi\r\n  React.useEffect(() => {\r\n    localStorage.setItem(\"universities\", JSON.stringify(universities));\r\n  }, [universities]);\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(\"examCombinations\", JSON.stringify(examCombinations));\r\n  }, [examCombinations]);\r\n\r\n  return (\r\n    <UniversityContext.Provider\r\n      value={{\r\n        universities,\r\n        setUniversities,\r\n        examCombinations,\r\n        setExamCombinations,\r\n      }}\r\n    >\r\n      {children}\r\n    </UniversityContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUniversity = () => {\r\n  const context = useContext(UniversityContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUniversity must be used within a UniversityProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}