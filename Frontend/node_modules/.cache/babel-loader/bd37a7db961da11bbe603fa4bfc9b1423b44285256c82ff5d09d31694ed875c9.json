{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project_js\\\\THweb\\\\DKOnline\\\\BaiTapCuoiKi\\\\Frontend\\\\src\\\\contexts\\\\UniversityContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UniversityContext = /*#__PURE__*/createContext(undefined);\nexport const UniversityProvider = ({\n  children\n}) => {\n  _s();\n  // Mock data - trong thực tế sẽ lấy từ API/database\n  const [universities, setUniversities] = useState([{\n    id: 1,\n    name: \"Đại học Bách Khoa Hà Nội\",\n    code: \"BKA\",\n    majors: [\"Công nghệ thông tin\", \"Điện tử\", \"Cơ khí\", \"Hóa học\"]\n  }, {\n    id: 2,\n    name: \"Đại học Công nghệ - ĐHQGHN\",\n    code: \"QHI\",\n    majors: [\"Công nghệ thông tin\", \"Khoa học máy tính\", \"An toàn thông tin\"]\n  }, {\n    id: 3,\n    name: \"Đại học Kinh tế Quốc dân\",\n    code: \"KTQ\",\n    majors: [\"Quản trị kinh doanh\", \"Kế toán\", \"Marketing\", \"Kinh tế quốc tế\"]\n  }]);\n  const [examCombinations, setExamCombinations] = useState([{\n    id: 1,\n    code: \"A00\",\n    subjects: [\"Toán\", \"Lý\", \"Hóa\"],\n    description: \"Khối A\"\n  }, {\n    id: 2,\n    code: \"A01\",\n    subjects: [\"Toán\", \"Lý\", \"Anh\"],\n    description: \"Khối A1\"\n  }, {\n    id: 3,\n    code: \"D01\",\n    subjects: [\"Toán\", \"Văn\", \"Anh\"],\n    description: \"Khối D1\"\n  }]);\n\n  // Lưu vào localStorage khi có thay đổi\n  React.useEffect(() => {\n    localStorage.setItem(\"universities\", JSON.stringify(universities));\n  }, [universities]);\n  React.useEffect(() => {\n    localStorage.setItem(\"examCombinations\", JSON.stringify(examCombinations));\n  }, [examCombinations]);\n  return /*#__PURE__*/_jsxDEV(UniversityContext.Provider, {\n    value: {\n      universities,\n      setUniversities,\n      examCombinations,\n      setExamCombinations\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(UniversityProvider, \"4b//yAYxEZKOqjfic/csM+hvKPI=\");\n_c = UniversityProvider;\nexport const useUniversity = () => {\n  _s2();\n  const context = useContext(UniversityContext);\n  if (context === undefined) {\n    throw new Error(\"useUniversity must be used within a UniversityProvider\");\n  }\n  return context;\n};\n_s2(useUniversity, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UniversityProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","UniversityContext","undefined","UniversityProvider","children","_s","universities","setUniversities","id","name","code","majors","examCombinations","setExamCombinations","subjects","description","useEffect","localStorage","setItem","JSON","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUniversity","_s2","context","Error","$RefreshReg$"],"sources":["C:/Project_js/THweb/DKOnline/BaiTapCuoiKi/Frontend/src/contexts/UniversityContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode } from \"react\";\r\n\r\nexport interface University {\r\n  id: number;\r\n  name: string;\r\n  code: string;\r\n  majors: string[];\r\n}\r\n\r\nexport interface ExamCombination {\r\n  id: number;\r\n  code: string;\r\n  subjects: string[];\r\n  description: string;\r\n}\r\n\r\ninterface UniversityContextType {\r\n  universities: University[];\r\n  setUniversities: (universities: University[]) => void;\r\n  examCombinations: ExamCombination[];\r\n  setExamCombinations: (combinations: ExamCombination[]) => void;\r\n}\r\n\r\nconst UniversityContext = createContext<UniversityContextType | undefined>(\r\n  undefined\r\n);\r\n\r\nexport const UniversityProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  // Mock data - trong thực tế sẽ lấy từ API/database\r\n  const [universities, setUniversities] = useState<University[]>([\r\n    {\r\n      id: 1,\r\n      name: \"Đại học Bách Khoa Hà Nội\",\r\n      code: \"BKA\",\r\n      majors: [\"Công nghệ thông tin\", \"Điện tử\", \"Cơ khí\", \"Hóa học\"],\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Đại học Công nghệ - ĐHQGHN\",\r\n      code: \"QHI\",\r\n      majors: [\"Công nghệ thông tin\", \"Khoa học máy tính\", \"An toàn thông tin\"],\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Đại học Kinh tế Quốc dân\",\r\n      code: \"KTQ\",\r\n      majors: [\r\n        \"Quản trị kinh doanh\",\r\n        \"Kế toán\",\r\n        \"Marketing\",\r\n        \"Kinh tế quốc tế\",\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  const [examCombinations, setExamCombinations] = useState<ExamCombination[]>([\r\n    {\r\n      id: 1,\r\n      code: \"A00\",\r\n      subjects: [\"Toán\", \"Lý\", \"Hóa\"],\r\n      description: \"Khối A\",\r\n    },\r\n    {\r\n      id: 2,\r\n      code: \"A01\",\r\n      subjects: [\"Toán\", \"Lý\", \"Anh\"],\r\n      description: \"Khối A1\",\r\n    },\r\n    {\r\n      id: 3,\r\n      code: \"D01\",\r\n      subjects: [\"Toán\", \"Văn\", \"Anh\"],\r\n      description: \"Khối D1\",\r\n    },\r\n  ]);\r\n\r\n  // Lưu vào localStorage khi có thay đổi\r\n  React.useEffect(() => {\r\n    localStorage.setItem(\"universities\", JSON.stringify(universities));\r\n  }, [universities]);\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(\"examCombinations\", JSON.stringify(examCombinations));\r\n  }, [examCombinations]);\r\n\r\n  return (\r\n    <UniversityContext.Provider\r\n      value={{\r\n        universities,\r\n        setUniversities,\r\n        examCombinations,\r\n        setExamCombinations,\r\n      }}\r\n    >\r\n      {children}\r\n    </UniversityContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUniversity = () => {\r\n  const context = useContext(UniversityContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUniversity must be used within a UniversityProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAuB9E,MAAMC,iBAAiB,gBAAGL,aAAa,CACrCM,SACF,CAAC;AAED,OAAO,MAAMC,kBAAqD,GAAGA,CAAC;EACpEC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAe,CAC7D;IACEW,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,0BAA0B;IAChCC,IAAI,EAAE,KAAK;IACXC,MAAM,EAAE,CAAC,qBAAqB,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS;EAChE,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,4BAA4B;IAClCC,IAAI,EAAE,KAAK;IACXC,MAAM,EAAE,CAAC,qBAAqB,EAAE,mBAAmB,EAAE,mBAAmB;EAC1E,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,0BAA0B;IAChCC,IAAI,EAAE,KAAK;IACXC,MAAM,EAAE,CACN,qBAAqB,EACrB,SAAS,EACT,WAAW,EACX,iBAAiB;EAErB,CAAC,CACF,CAAC;EAEF,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAoB,CAC1E;IACEW,EAAE,EAAE,CAAC;IACLE,IAAI,EAAE,KAAK;IACXI,QAAQ,EAAE,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC;IAC/BC,WAAW,EAAE;EACf,CAAC,EACD;IACEP,EAAE,EAAE,CAAC;IACLE,IAAI,EAAE,KAAK;IACXI,QAAQ,EAAE,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC;IAC/BC,WAAW,EAAE;EACf,CAAC,EACD;IACEP,EAAE,EAAE,CAAC;IACLE,IAAI,EAAE,KAAK;IACXI,QAAQ,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;IAChCC,WAAW,EAAE;EACf,CAAC,CACF,CAAC;;EAEF;EACApB,KAAK,CAACqB,SAAS,CAAC,MAAM;IACpBC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACd,YAAY,CAAC,CAAC;EACpE,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElBX,KAAK,CAACqB,SAAS,CAAC,MAAM;IACpBC,YAAY,CAACC,OAAO,CAAC,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAACR,gBAAgB,CAAC,CAAC;EAC5E,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EAEtB,oBACEZ,OAAA,CAACC,iBAAiB,CAACoB,QAAQ;IACzBC,KAAK,EAAE;MACLhB,YAAY;MACZC,eAAe;MACfK,gBAAgB;MAChBC;IACF,CAAE;IAAAT,QAAA,EAEDA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC,CAAC;AAACrB,EAAA,CAxEWF,kBAAqD;AAAAwB,EAAA,GAArDxB,kBAAqD;AA0ElE,OAAO,MAAMyB,aAAa,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACjC,MAAMC,OAAO,GAAGhC,UAAU,CAACG,iBAAiB,CAAC;EAC7C,IAAI6B,OAAO,KAAK5B,SAAS,EAAE;IACzB,MAAM,IAAI6B,KAAK,CAAC,wDAAwD,CAAC;EAC3E;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,aAAa;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}